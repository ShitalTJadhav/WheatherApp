//
//  WheatherWorker.swift
//  WheatherApp
//
//  Created by Tushar  Jadhav on 2022-10-07.
//  Copyright (c) 2022 Shital  Jadhav. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

typealias WheatherFetchCompletionClosure = (_ response: (Result<WheatherResponse, DataResponseError>)) -> Void

protocol WheatherForecastProtocol {
  func fetchWheatherForecast(cityName: String, _ completion: @escaping WheatherFetchCompletionClosure)
}

struct WheatherWorker: WheatherForecastProtocol {
  
  var networkClient: NetworkClient = NetworkClient.shared
    
  func fetchWheatherForecast(cityName: String, _ completion: @escaping WheatherFetchCompletionClosure){

    let paramater = ["q": cityName,
                     "units":"metric"]
      
    self.networkClient.performRequest(apiName: NetworkClient.APIName.forecast.rawValue, parameters: paramater) { (result: Result<WheatherResponse, DataResponseError>) in
            
      switch result {
      case .success(let response):
        completion(.success(response))
      case .failure(let error):
        completion(.failure(error))
      }
    }
  }
}

